#!/bin/sh

if [ "$#" -gt "0" ]
then
    # get the last argument (POSIX shell)
    for script; do true; done

    # remove the last argument (POSIX shell)
    n=$(($# -1))
    for arg do
        [ "$n" -gt 0 ] && set -- "$@" "$arg"
        shift
        n=$((n -1))
    done

    if [ -x "$script" ]
    then
        pandoc "$@" -t json | exec "$script"
    else
        perl="pandoc_walk($script)"
        echo "$perl"
        pandoc "$@" -t json | \
            perl -Ilib -MPandoc::Filter -MPandoc::Elements -E "$perl"
    fi
else
    echo "Usage: $0 [ options ] script"
    echo
    echo \
" Calls pandoc with given options to parse a document and process its abstract"
    echo \
" syntax tree. A processing script must be given as executable file or as Perl"
    echo \
" code to be passed to function 'pandoc_walk' from Perl module Pandoc::Filter."
    echo
    echo "Examples:"
    echo 
    echo " extract all URLs from a HTML file"
    echo "  $0 document.html '"'Link=>sub{say $_[0]->url}'"'"
    echo 
    echo " extract a table of contents from a LaTeX file"
    echo "  $0 document.tex '"'Header=>sub{say "-" x $_[0]->level, stringify($_[0])}'"'"
fi
